/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "KinectPV2.h"


/* Header for class KinectPV2_Device */
#ifndef _Included_KinectPV2_Device
#define _Included_KinectPV2_Device
#ifdef __cplusplus
extern "C" {
#endif
	/*
	* Class:     KinectPV2_Device
	* Method:    jniDevice
	* Signature: ()V
	*/
	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniDevice
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniInit
	* Signature: ()Z
	*/
	JNIEXPORT jboolean JNICALL Java_KinectPV2_Device_jniInit
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniVersion
	* Signature: ()Ljava/lang/String;
	*/
	JNIEXPORT jstring JNICALL Java_KinectPV2_Device_jniVersion
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniUpdate
	* Signature: ()Z
	*/
	JNIEXPORT jboolean JNICALL Java_KinectPV2_Device_jniUpdate
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniStopDevice
	* Signature: ()V
	*/
	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniStopDevice
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniStopSignal
	* Signature: ()Z
	*/
	JNIEXPORT jboolean JNICALL Java_KinectPV2_Device_jniStopSignal
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniEnableColorFrame
	* Signature: (Z)V
	*/
	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniEnableColorFrame
		(JNIEnv *, jobject, jboolean);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniEnableColorChannelsFrame
	* Signature: (Z)V
	*/
	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniEnableColorChannel
		(JNIEnv *, jobject, jboolean);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniEnableDepthFrame
	* Signature: (Z)V
	*/
	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniEnableDepthFrame
		(JNIEnv *, jobject, jboolean);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniEnableDepthMaskFrame
	* Signature: (Z)V
	*/
	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniEnableDepthMaskFrame
		(JNIEnv *, jobject, jboolean);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniEnableInfraredFrame
	* Signature: (Z)V
	*/
	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniEnableInfraredFrame
		(JNIEnv *, jobject, jboolean);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniEnableBodyTrackFrame
	* Signature: (Z)V
	*/
	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniEnableBodyTrackFrame
		(JNIEnv *, jobject, jboolean);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniEnableLongExposureInfrared
	* Signature: (Z)V
	*/
	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniEnableInfraredLongExposure
		(JNIEnv *, jobject, jboolean);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniEnableSkeletonDepth
	* Signature: ()V
	*/
	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniEnableSkeletonDepth
		(JNIEnv *, jobject, jboolean);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniEnableSkeletonColor
	* Signature: ()V
	*/
	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniEnableSkeletonColor
		(JNIEnv *, jobject, jboolean);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniEnableSkeleton3D
	* Signature: ()V
	*/
	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniEnableSkeleton3D
		(JNIEnv *, jobject, jboolean);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniEnableFaceDetection
	* Signature: ()V
	*/
	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniEnableFaceDetection
		(JNIEnv *, jobject, jboolean);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniEnableHDFaceDetection
	* Signature: ()V
	*/
	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniEnableHDFaceDetection
		(JNIEnv *, jobject, jboolean);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetColorData
	* Signature: ()[I
	*/
	JNIEXPORT jintArray JNICALL Java_KinectPV2_Device_jniGetColorData
		(JNIEnv *, jobject);



	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetDepthData
	* Signature: ()[I
	*/
	JNIEXPORT jintArray JNICALL Java_KinectPV2_Device_jniGetDepth16Data
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetDepthData
	* Signature: ()[I
	*/
	JNIEXPORT jintArray JNICALL Java_KinectPV2_Device_jniGetRawDepth16Data
		(JNIEnv *, jobject);



	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetDepthData
	* Signature: ()[I
	*/
	JNIEXPORT jintArray JNICALL Java_KinectPV2_Device_jniGetRawDepth256Data
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetDepthData
	* Signature: ()[I
	*/
	JNIEXPORT jintArray JNICALL Java_KinectPV2_Device_jniGetDepth256Data
		(JNIEnv *, jobject);



	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetInfraredData
	* Signature: ()[I
	*/
	JNIEXPORT jintArray JNICALL Java_KinectPV2_Device_jniGetInfraredData
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetInfraredLongExposure
	* Signature: ()[I
	*/
	JNIEXPORT jintArray JNICALL Java_KinectPV2_Device_jniGetInfraredLongExposure
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetBodyTrack
	* Signature: ()[I
	*/
	JNIEXPORT jintArray JNICALL Java_KinectPV2_Device_jniGetBodyTrack
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetDepthMask
	* Signature: ()[I
	*/
	JNIEXPORT jintArray JNICALL Java_KinectPV2_Device_jniGetDepthMask
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetSkeleton3D
	* Signature: ()[I
	*/
	JNIEXPORT jfloatArray JNICALL Java_KinectPV2_Device_jniGetSkeleton3D
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetSkeletonDepth
	* Signature: ()[I
	*/
	JNIEXPORT jfloatArray JNICALL Java_KinectPV2_Device_jniGetSkeletonDepth
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetSkeletonColor
	* Signature: ()[I
	*/
	JNIEXPORT jfloatArray JNICALL Java_KinectPV2_Device_jniGetSkeletonColor
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetFaceDetection
	* Signature: ()[I
	*/
	JNIEXPORT jfloatArray JNICALL Java_KinectPV2_Device_jniGetFaceColorData
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetFaceDetection
	* Signature: ()[I
	*/
	JNIEXPORT jfloatArray JNICALL Java_KinectPV2_Device_jniGetFaceInfraredData
		(JNIEnv *, jobject);


	JNIEXPORT jfloatArray JNICALL Java_KinectPV2_Device_jniGetMapDethToColorSpace
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetHDFaceDetection
	* Signature: ()[I
	*/
	JNIEXPORT jfloatArray JNICALL Java_KinectPV2_Device_jniGetHDFaceDetection
		(JNIEnv *, jobject);


	JNIEXPORT jfloatArray JNICALL Java_KinectPV2_Device_jniGetColorChannel
		(JNIEnv *, jobject);


	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniEnablePointCloud
		(JNIEnv *, jobject, jboolean);


	JNIEXPORT jintArray JNICALL Java_KinectPV2_Device_jniGetPointCloudDepthImage
		(JNIEnv *, jobject);


	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetPointCloudDeptMap
	* Signature: ()[F
	*/
	JNIEXPORT jfloatArray JNICALL Java_KinectPV2_Device_jniGetPointCloudDeptMap
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetPointCloudColorMap
	* Signature: ()[F
	*/
	JNIEXPORT jfloatArray JNICALL Java_KinectPV2_Device_jniGetPointCloudColorMap
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniSetLowThresholdDepthPC
	* Signature: (F)V
	*/
	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniSetLowThresholdDepthPC
		(JNIEnv *, jobject, jint);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetLowThresholdDepthPC
	* Signature: ()F
	*/
	JNIEXPORT jint JNICALL Java_KinectPV2_Device_jniGetLowThresholdDepthPC
		(JNIEnv *, jobject);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniSetHighThresholdDepthPC
	* Signature: (F)V
	*/
	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniSetHighThresholdDepthPC
		(JNIEnv *, jobject, jint);

	/*
	* Class:     KinectPV2_Device
	* Method:    jniGetHighThresholdDepthPC
	* Signature: ()F
	*/
	JNIEXPORT jint JNICALL Java_KinectPV2_Device_jniGetHighThresholdDepthPC
		(JNIEnv *, jobject);


	JNIEXPORT jintArray JNICALL  Java_KinectPV2_Device_jniGetBodyIndexUser
		(JNIEnv *, jobject, jint);

	JNIEXPORT jint JNICALL  Java_KinectPV2_Device_jniGetNumberOfUsers
		(JNIEnv *, jobject);

	JNIEXPORT jintArray JNICALL  Java_KinectPV2_Device_jniGetBodyTrackIds
		(JNIEnv *, jobject);

	JNIEXPORT jintArray JNICALL  Java_KinectPV2_Device_jniGetRawBodyTrack
		(JNIEnv *, jobject);


	/*
	* Class:     KinectPV2_Device
	* Method:    jniSetNumberOfUsers
	* Signature: (I)V
	*/
	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniSetNumberOfUsers
		(JNIEnv *, jobject, jint);


	/*
	* Class:     KinectPV2_Device
	* Method:    jni_MapCameraPointToDepthSpace
	* Signature: (I)V
	*/
	JNIEXPORT jfloatArray JNICALL Java_KinectPV2_Device_jniMapCameraPointToDepthSpace
		(JNIEnv *, jobject, jfloat, jfloat, jfloat);

	/*
	* Class:     KinectPV2_Device
	* Method:    jni_MapCameraPointToDepthSpace
	* Signature: (I)V
	*/
	JNIEXPORT jfloatArray JNICALL Java_KinectPV2_Device_jniMapCameraPointToColorSpace
		(JNIEnv *, jobject, jfloat, jfloat, jfloat);


	JNIEXPORT jfloatArray JNICALL Java_KinectPV2_Device_jniMapCameraPointToColorSpace
		(JNIEnv *, jobject, jfloat, jfloat, jfloat);

	JNIEXPORT void JNICALL Java_KinectPV2_Device_jniEnableCoordinateMapperRGBDepth
		(JNIEnv *, jobject);



#ifdef __cplusplus
}
#endif
#endif
